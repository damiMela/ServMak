cmake_minimum_required(VERSION 3.12.0)
project(ServMak VERSION 0.1.0 LANGUAGES C CXX)

set(CMAKE_CXX_STANDARD 11)

# # Find Python interpreter and development components
# find_package(Python COMPONENTS Interpreter Development)

# # Define the path to the Python script
# set(PYTHON_SCRIPT "${CMAKE_SOURCE_DIR}/clientLib/generate_lib.py")

# # Ensure the script exists (optional but good practice)
# if(NOT EXISTS ${PYTHON_SCRIPT})
#     message(FATAL_ERROR "Python script not found: ${PYTHON_SCRIPT}")
# else()
#   message("Python script found: ${PYTHON_SCRIPT}")
# endif()

# # Define the output file generated by the Python script
# set(OUTPUT_FILE "${CMAKE_SOURCE_DIR}/clientLib/servmak_client.h")

# # Ensure the output file is generated before building
# add_custom_command(
#     OUTPUT 
#         ${CMAKE_CURRENT_BINARY_DIR}/file.null
#         ${OUTPUT_FILE}
#     COMMAND ${Python_EXECUTABLE} ${PYTHON_SCRIPT}
#     DEPENDS ${PYTHON_SCRIPT}
#     COMMENT "Running Python script to generate ${OUTPUT_FILE} before building"
# )


# Add the executable target
add_executable(ServMakCli 
example/client/main.cpp 
example/client/servmak_cli_impl.cpp
)

add_executable(ServMakCli_oop
example/client/main_oop.cpp 
example/client/servmak_cli_impl.cpp
)

add_executable(ServMakServ 
example/server/servmak_serv_impl.cpp 
example/server/main.cpp 
)

# servmak_lib/server/servmak_server.cpp


# if(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/file.null)
#     message(FATAL_ERROR "File \"${CMAKE_CURRENT_BINARY_DIR}/file.null\" found, \
#     this should never be created, remove!")
# endif()


# # Add the custom command dependency on the output file
# add_custom_target(GenerateHeaders ALL
#     DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/file.null #Depend on a file that will not be created to ensure that it always runs
# )

# # Make sure the 'GenerateHeaders' target runs before the 'ServMak' target
# add_dependencies(ServMak GenerateHeaders)

# Include the directories
target_include_directories(ServMakCli PRIVATE ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/example)
target_include_directories(ServMakCli_oop PRIVATE ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/example)
target_include_directories(ServMakServ PRIVATE ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/example)

# Link libraries for Windows
if(WIN32)
    target_link_libraries(ServMakCli wsock32 ws2_32)
    target_link_libraries(ServMakCli_oop wsock32 ws2_32)
    target_link_libraries(ServMakServ wsock32 ws2_32)
endif()
